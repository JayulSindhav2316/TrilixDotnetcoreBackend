using Max.Data.DataModel;
using Max.Data.Interfaces;
using Max.Data.Repositories;
using System.Threading.Tasks;

namespace Max.Data
{
    public class UnitOfWork : IUnitOfWork
    {
        private readonly membermaxContext _context;

        //private AuditHistoryRepository _auditHistoryrepository;
        private StaffUserRepository _staffUserRepository;
        private RoleRepository _roleRepository;
        private StaffRoleRepository _staffRoleRepository;
        private MembershipTypeRepository _membershipTypeRepository;
        private MembershipFeeRepository _membershipFeeRepository;
        private MembershipPeriodRepository _membershipPeriodRepository;
        private MembershipCategoryRepository _membershipCategoryRepository;
        private DepartmentRepository _departmentRepository;
        private GlAccountTypeRepository _glAccountTypeRepository;
        private GlAccountRepository _glAccountRepository;
        private RoleMenuRepository _roleMenuRepository;
        private MenuRepository _menuRepository;
        private MenuGroupRepository _menuGroupRepository;
        private PersonRepository _personRepository;
        private LookupRepository _lookupRepository;
        private CommunicationRepository _communicationRepository;
        private InvoiceRepository _invoiceRepository;
        private InvoiceDetailRepository _invoiceDetailRepository;
        private MembershipRepository _membershipRepository;
        private MembershipHistoryRepository _membershipHistoryRepository;
        private RelationRepository _relationRepository;
        private AddressRepository _addressRepository;
        private EmailRepository _emailRepository;
        private PhoneRepository _phoneRepository;
        private CompanyRepository _companyRepository;
        private DocumentRepository _documentRepository;
        private OrganizationRepository _organizationRepository;
        private ReceiptHeaderRepository _receiptHeaderRepository;
        private ReceiptDetailRepository _receiptDetailRepository;
        private ShoppingCartRepository _shoppingCartRepository;
        private ShoppingCartDetailRepository _shoppingCartDetailRepository;
        private PaymentTransactionRepository _paymentTransactionRepository;
        private AutoBillingDraftRepository _autoBillingDraftRepository;
        private AutoBillingNotificationRepository _autoBillingNotificationRepository;
        private AutoBillingProcessingDateRepository _autoBillingProcessingDateRepository;
        private AutoBillingSettingRepository _autoBillingSettingRepository;
        private BillingDocumentRepository _billingDocumentRepository;
        private PaymentProcessorRepository _paymentProcessorRepository;
        private PaymentProfileRepository _paymentProfileRepository;
        private AutoBillingJobRepository _autoBillingJobRepository;
        private BillingJobRepository _billingJobRepository;
        private BillingCycleRepository _billingCycleRepository;
        private PaperInvoiceRepository _paperInvoiceRepository;
        private JournalEntryHeaderRepository _journalEntryHeaderRepository;
        private JournalEntryDetailRepository _journalEntryDetailRepository;
        private BillingFeeRepository _billingFeeRepository;
        private MultiFactorCodeRepository _multiFactorCodeRepository;
        private AccessLogRepository _accessLogRepository;
        private UserDeviceRepository _userDeviceRepository;
        private AccessTokenRepository _accessTokenRepository;
        private MembershipConnectionRepository _membershipConnectionRepository;
        private CreditTransactionRepository _creditTransactionRepository;
        private RefundDetailRepository _refundDetailRepository;
        private VoidDetailRepository _voidDetailRepository;
        private AccountingSetupRepository _accountingSetupRepository;
        private AutoBillingOnHoldRepository _autoBillingOnHoldRepository;
        private NoteRepository _noteRepository;
        private AutoBillingPaymentRepository _autoBillingPaymentRepository;
        private PromoCodeRepository _promoCodeRepository;
        private RelationshipRepository _relationshipRepository;
        private ReportRepository _reportRepository;
        private BillingBatchRepository _billingBatchRepository;
        private BillingEmailRepository _billingEmailRepository;
        private ItemRepository _itemRepository;
        private ItemTypeRepository _itemTypeRepository;
        private EntityRepository _entityRepository;
        private MembershipReportRepository _membershipReportRepository;
        private OpportunityReportRepository _opportunityReportRepository;
        private ReportFilterRepository _reportFilterRepository;
        private ReportShareRepository _reportShareRepository;
        private ReportParameterRepository _reportParameterRepository;
        private ReportSortorderRepository _reportsortOrderRepository;
        private ReportFieldRepository _reportFieldRepository;
        private ResetPasswordRepository _resetPasswordRepository;
        private GroupRepository _groupRepository;
        private GroupRoleRepository _groupRoleRepository;
        private LinkGroupRoleRepository _linkGroupRoleRepository;
        private GroupMemberRepository _groupMemberRepository;
        private WriteOffRepository _writeOffRepository;
        private GroupMemberRoleRepository _groupMemberRoleRepository;
        private GroupHistoryRepository _GrouphistoryRepository;
        private StaffSearchHistoryRepository _staffSearchHistoryRepository;
        private ClientLogRepository _clientLogRepository;
        private DocumentContainerRepository _documentContainerRepository;
        private DocumentObjectRepository _documentObjectRepository;
        private ContainerAccessRepository _containerAccessRepository;
        private ConfigurationRepository _configurationRepository;
        private QuestionBankRepository _questionBankRepository;
        private QuestionLinkRepository _questionLinkRepository;
        private AnswerOptionRepository _answerOptionRepository;
        private AnswerTypeLookUpRepository _answerTypeLookUpRepository;
        private EventTypeRepository _eventTypeRepository;
        private TimeZoneRepository _timeZoneRepository;
        private RegistrationFeeTypeRepository _registrationFeeTypeRepository;
        private TagRepository _tagRepository;
        private DocumentObjectAccessRepository _documentObjectAccessRepository;
        private DocumentObjectAccessHistoryRepository _documentObjectAccessHistoryRepository;
        private DocumentObjectTagRepository _documentObjectTagRepository;
        private GroupRegistrationRepository _groupRegistrationRepository;
        private EventRepository _eventRepository;
        private LinkEventFeeTypeRepository _linkEventFeeTypeRepository;
        private LinkRegistrationGroupFeeRepository _linkRegistrationGroupFeeRepository;
        private LinkEventGroupRepository _linkEventGroupRepository;
        private SessionRepository _sessionRepository;
        private SessionLeaderLinkRepository _sessionLeaderLinkRepository;
        private SessionRegistrationGroupPricingRepository _sessionRegistrationGroupPricingRepository;
        private CountryRepository _countryRepository;
        private StateRepository _stateRepository;
        private EventContactRepository _eventContactRepository;
        private SolrExportRepository _solrExportRepository;
        private ContactRoleRepository _contactRoleRepository;
        private EntityRoleRepository _entityRoleRepository;
        private EntityRoleHistoryRepository _entityRoleHistoryRepository;
        private ContactActivityRepository _contactActivityRepository;
        private EventRegisterRepository _eventRegisterRepository;
        private EventRegisterSessionRepository _eventRegisterSessionRepository;
        private EventRegisterQuestionRepository _eventRegisterQuestionRepository;
        private CustomFieldRepository _customFieldRepository;
        private ContactTokenRepository _contactTokenRepository;
        private ContactActivityInteractionRepository _contactActivityInteractionRepository;
        private OpportunityPipelineRepository _opportunityPipelineRepository;
        private PipelineStageRepository _pipelineStageRepository;
        private PipelineProductRepository _pipelineProductRepository;
        private BillingCycleNotificationRepository _billingCycleNotificationRepository;
        private OpportunityRepository _opportunityRepository;
        public UnitOfWork(membermaxContext context)
        {
          this._context = context;
        }

        //public IAuditHistoryRepository AuditHistory => _auditHistoryrepository = _auditHistoryrepository ?? new AuditHistoryRepository(_context);
        public IGrouphistoryRepository GroupHistories => _GrouphistoryRepository = _GrouphistoryRepository ?? new GroupHistoryRepository(_context);
        public IGroupMemberRoleRepository GroupMemberRoles => _groupMemberRoleRepository = _groupMemberRoleRepository ?? new GroupMemberRoleRepository(_context);
        public IGroupMemberRepository GroupMembers => _groupMemberRepository = _groupMemberRepository ?? new GroupMemberRepository(_context);
        public ILinkGroupRoleRepository LinkGroupRoles => _linkGroupRoleRepository = _linkGroupRoleRepository ?? new LinkGroupRoleRepository(_context);
        public IGroupRoleRepository GroupRoles => _groupRoleRepository = _groupRoleRepository ?? new GroupRoleRepository(_context);
        public IGroupRepository Groups => _groupRepository = _groupRepository ?? new GroupRepository(_context);
        public IStaffUserRepository Staffusers => _staffUserRepository = _staffUserRepository ?? new StaffUserRepository(_context);
        public IRoleRepository Roles => _roleRepository = _roleRepository ?? new RoleRepository(_context);
        public IStaffRoleRepository Staffroles => _staffRoleRepository = _staffRoleRepository ?? new StaffRoleRepository(_context);
        public IMembershipTypeRepository Membershiptypes => _membershipTypeRepository = _membershipTypeRepository ?? new MembershipTypeRepository(_context);
        public IMembershipFeeRepository Membershipfees => _membershipFeeRepository = _membershipFeeRepository ?? new MembershipFeeRepository(_context);
        public IMembershipPeriodRepository MembershipPeriods => _membershipPeriodRepository = _membershipPeriodRepository ?? new MembershipPeriodRepository(_context);
        public IMembershipCategoryRepsoitory MembershipCategories => _membershipCategoryRepository = _membershipCategoryRepository ?? new MembershipCategoryRepository(_context);
        public IDepartmentRepository Departments => _departmentRepository = _departmentRepository ?? new DepartmentRepository(_context);
        public IGlAccountTypeRepository GlAccountTypes => _glAccountTypeRepository = _glAccountTypeRepository ?? new GlAccountTypeRepository(_context);
        public IGlAccountRepository GlAccounts => _glAccountRepository = _glAccountRepository ?? new GlAccountRepository(_context);
        public IRoleMenuRepository Rolemenus => _roleMenuRepository = _roleMenuRepository ?? new RoleMenuRepository(_context);
        public IMenuRepository Menus => _menuRepository = _menuRepository ?? new MenuRepository(_context);
        public IMenuGroupRepository MenuGroups => _menuGroupRepository = _menuGroupRepository ?? new MenuGroupRepository(_context);
        public IPersonRepository Persons => _personRepository = _personRepository ?? new PersonRepository(_context);
        public ILookupRepository Lookups => _lookupRepository = _lookupRepository ?? new LookupRepository(_context);
        public ICommunicationRepository Communications => _communicationRepository = _communicationRepository ?? new CommunicationRepository(_context);
        public IInvoiceRepository Invoices => _invoiceRepository = _invoiceRepository ?? new InvoiceRepository(_context);
        public IInvoiceDetailRepository InvoiceDetails => _invoiceDetailRepository = _invoiceDetailRepository ?? new InvoiceDetailRepository(_context);
        public IMembershipRepository Memberships => _membershipRepository = _membershipRepository ?? new MembershipRepository(_context);
        public IMembershipHistoryRepository MembershipHistories => _membershipHistoryRepository = _membershipHistoryRepository ?? new MembershipHistoryRepository(_context);
        public IRelationRepository Relations => _relationRepository = _relationRepository ?? new RelationRepository(_context);
        public IAddressRepository Addresses => _addressRepository = _addressRepository ?? new AddressRepository(_context);
        public IEmailRepository Emails => _emailRepository = _emailRepository ?? new EmailRepository(_context);
        public IPhoneRepository Phones => _phoneRepository = _phoneRepository ?? new PhoneRepository(_context);
        public ICompanyRepository Companies => _companyRepository = _companyRepository ?? new CompanyRepository(_context);
        public IDocumentRepository Documents => _documentRepository = _documentRepository ?? new DocumentRepository(_context);
        public IOrganizationRepository Organizations => _organizationRepository = _organizationRepository ?? new OrganizationRepository(_context);
        public IReceiptHeaderRepository ReceiptHeaders => _receiptHeaderRepository = _receiptHeaderRepository ?? new ReceiptHeaderRepository(_context);
        public IReceiptDetailRepository ReceiptDetails => _receiptDetailRepository = _receiptDetailRepository ?? new ReceiptDetailRepository(_context);
        public IShoppingCartRepository ShoppingCarts => _shoppingCartRepository = _shoppingCartRepository ?? new ShoppingCartRepository(_context);
        public IShoppingCartDetailRepository ShoppingCartDetails => _shoppingCartDetailRepository = _shoppingCartDetailRepository ?? new ShoppingCartDetailRepository(_context);
        public IPaymentTransactionRepository PaymentTransactions => _paymentTransactionRepository = _paymentTransactionRepository ?? new PaymentTransactionRepository(_context);
        public IAutoBillingDraftRepository AutoBillingDrafts => _autoBillingDraftRepository = _autoBillingDraftRepository ?? new AutoBillingDraftRepository(_context);
        public IAutoBillingNotificationRepository AutoBillingNotifications => _autoBillingNotificationRepository = _autoBillingNotificationRepository ?? new AutoBillingNotificationRepository(_context);
        public IAutoBillingProcessingDateRepository AutoBillingProcessingDates => _autoBillingProcessingDateRepository = _autoBillingProcessingDateRepository ?? new AutoBillingProcessingDateRepository(_context);
        public IAutoBillingSettingRepository AutoBillingSettings => _autoBillingSettingRepository = _autoBillingSettingRepository ?? new AutoBillingSettingRepository(_context);
        public IBillingDocumentRepository BillingDocuments => _billingDocumentRepository = _billingDocumentRepository ?? new BillingDocumentRepository(_context);
        public IPaymentProcessorRepository PaymentProcessors => _paymentProcessorRepository = _paymentProcessorRepository ?? new PaymentProcessorRepository(_context);
        public IPaymentProfileRepository PaymentProfiles => _paymentProfileRepository = _paymentProfileRepository ?? new PaymentProfileRepository(_context);
        public IAutoBillingJobRepository AutoBillingJobs => _autoBillingJobRepository = _autoBillingJobRepository ?? new AutoBillingJobRepository(_context);
        public IBillingJobRepository BillingJobs => _billingJobRepository = _billingJobRepository ?? new BillingJobRepository(_context);
        public IBillingCycleRepository BillingCycles => _billingCycleRepository = _billingCycleRepository ?? new BillingCycleRepository(_context);
        public IPaperInvoiceRepository PaperInvoices => _paperInvoiceRepository = _paperInvoiceRepository ?? new PaperInvoiceRepository(_context);
        public IJournalEntryHeaderRepository JournalEntryHeaders => _journalEntryHeaderRepository = _journalEntryHeaderRepository ?? new JournalEntryHeaderRepository(_context);
        public IJournalEntryDetailRepository JournalEntryDetails => _journalEntryDetailRepository = _journalEntryDetailRepository ?? new JournalEntryDetailRepository(_context);
        public IBillingFeeRepository BillingFees => _billingFeeRepository = _billingFeeRepository ?? new BillingFeeRepository(_context);
        public IMultiFactorCodeRepository MultiFactorCodes => _multiFactorCodeRepository = _multiFactorCodeRepository ?? new MultiFactorCodeRepository(_context);
        public IAccessLogRepository AccessLogs => _accessLogRepository = _accessLogRepository ?? new AccessLogRepository(_context);
        public IUserDeviceRepository UserDevices => _userDeviceRepository = _userDeviceRepository ?? new UserDeviceRepository(_context);
        public IAccessTokenRepository AccessTokens => _accessTokenRepository = _accessTokenRepository ?? new AccessTokenRepository(_context);
        public IMembershipConnectionRepository MembershipConnections => _membershipConnectionRepository = _membershipConnectionRepository ?? new MembershipConnectionRepository(_context);
        public ICreditTransactionRepository CreditTransactions => _creditTransactionRepository = _creditTransactionRepository ?? new CreditTransactionRepository(_context);
        public IRefundDetailRepository RefundDetails => _refundDetailRepository = _refundDetailRepository ?? new RefundDetailRepository(_context);

        public IVoidDetailRepository VoidDetails => _voidDetailRepository = _voidDetailRepository ?? new VoidDetailRepository(_context);

        public IAccountingSetupRepository AccountingSetups => _accountingSetupRepository = _accountingSetupRepository ?? new AccountingSetupRepository(_context);
        public IAutoBillingOnHoldRepository AutoBillingOnHolds => _autoBillingOnHoldRepository = _autoBillingOnHoldRepository ?? new AutoBillingOnHoldRepository(_context);
        public INoteRepository Notes => _noteRepository = _noteRepository ?? new NoteRepository(_context);
        public IAutoBillingPaymentRepository AutoBillingPayments => _autoBillingPaymentRepository = _autoBillingPaymentRepository ?? new AutoBillingPaymentRepository(_context);
        public IPromoCodeRepository PromoCodes => _promoCodeRepository = _promoCodeRepository ?? new PromoCodeRepository(_context);
        public IRelationshipRepository Relationships => _relationshipRepository = _relationshipRepository ?? new RelationshipRepository(_context);
        public IReportRepository Reports => _reportRepository = _reportRepository ?? new ReportRepository(_context);
        public IBillingBatchRepository BillingBatches => _billingBatchRepository = _billingBatchRepository ?? new BillingBatchRepository(_context);
        public IBillingEmailRepository BillingEmails => _billingEmailRepository = _billingEmailRepository ?? new BillingEmailRepository(_context);
        public IItemRepository Items => _itemRepository = _itemRepository ?? new ItemRepository(_context);
        public IItemTypeRepository ItemTypes => _itemTypeRepository = _itemTypeRepository ?? new ItemTypeRepository(_context);
        public IEntityRepository Entities => _entityRepository = _entityRepository ?? new EntityRepository(_context);
        public IMembershipReportRepository MembershipReports => _membershipReportRepository = _membershipReportRepository ?? new MembershipReportRepository(_context);
        public IOpportunityReportRepository OpportunityReports => _opportunityReportRepository = _opportunityReportRepository ?? new OpportunityReportRepository(_context);
        public IReportFilterRepository ReportFilters => _reportFilterRepository = _reportFilterRepository ?? new ReportFilterRepository(_context);
        public IReportShareRepository ReportShares => _reportShareRepository = _reportShareRepository ?? new ReportShareRepository(_context);
        public IReportParameterRepository ReportParemeters => _reportParameterRepository = _reportParameterRepository ?? new ReportParameterRepository(_context);
        public IReportSortorderRepository ReportSortorders => _reportsortOrderRepository = _reportsortOrderRepository ?? new ReportSortorderRepository(_context);
        public IReportFieldRepository ReportFields => _reportFieldRepository = _reportFieldRepository ?? new ReportFieldRepository(_context);
        public IResetPasswordRepository ResetPasswords => _resetPasswordRepository = _resetPasswordRepository ?? new ResetPasswordRepository(_context);
        public IWriteOffRepository WriteOffs => _writeOffRepository = _writeOffRepository ?? new WriteOffRepository(_context);
        public IStaffSearchHistoryRepository StaffSearchHistories => _staffSearchHistoryRepository = _staffSearchHistoryRepository ?? new StaffSearchHistoryRepository(_context);
        public IGroupRegistrationRepository GroupRegistrations => _groupRegistrationRepository = _groupRegistrationRepository ?? new GroupRegistrationRepository(_context);
        public IClientLogRepository ClientLogs => _clientLogRepository = _clientLogRepository ?? new ClientLogRepository(_context);
        public IDocumentContainerRepository DocumentContainers => _documentContainerRepository = _documentContainerRepository ?? new DocumentContainerRepository(_context);
        public IDocumentObjectRepository DocumentObjects => _documentObjectRepository = _documentObjectRepository ?? new DocumentObjectRepository(_context);
        public IContainerAccessRepository ContainerAccesses => _containerAccessRepository = _containerAccessRepository ?? new ContainerAccessRepository(_context);
        public IConfigurationRepository Configurations => _configurationRepository = _configurationRepository ?? new ConfigurationRepository(_context);
        public ITagRepository Tags => _tagRepository = _tagRepository ?? new TagRepository(_context);
        public IDocumentObjectAccessRepository DocumentObjectAccesses => _documentObjectAccessRepository = _documentObjectAccessRepository ?? new DocumentObjectAccessRepository(_context);
        public IDocumentObjectTagRepository DocumentObjectTags => _documentObjectTagRepository = _documentObjectTagRepository ?? new DocumentObjectTagRepository(_context);
        public IDocumentObjectAccessHistoryRepository DocumentObjectAccessHistories => _documentObjectAccessHistoryRepository = _documentObjectAccessHistoryRepository ?? new DocumentObjectAccessHistoryRepository(_context);
        public IQuestionBankRepository QuestionBanks => _questionBankRepository = _questionBankRepository ?? new QuestionBankRepository(_context);
        public IQuestionLinkRepository QuestionLinks => _questionLinkRepository = _questionLinkRepository ?? new QuestionLinkRepository(_context);
        public IAnswerOptionRepository AnswerOptions => _answerOptionRepository = _answerOptionRepository ?? new AnswerOptionRepository(_context);
        public IAnswerTypeLookUpRepository AnswerTypeLookUps => _answerTypeLookUpRepository = _answerTypeLookUpRepository ?? new AnswerTypeLookUpRepository(_context);
        public IEventTypeRepository EventTypes => _eventTypeRepository = _eventTypeRepository ?? new EventTypeRepository(_context);
        public ITimeZoneRepository TimeZones => _timeZoneRepository = _timeZoneRepository ?? new TimeZoneRepository(_context);
        public IRegistrationFeeTypeRepository RegistrationFeeTypes => _registrationFeeTypeRepository = _registrationFeeTypeRepository ?? new RegistrationFeeTypeRepository(_context);
        public IEventRepository Events => _eventRepository = _eventRepository ?? new EventRepository(_context);
        public ILinkEventFeeTypeRepository LinkEventFeeTypes => _linkEventFeeTypeRepository = _linkEventFeeTypeRepository ?? new LinkEventFeeTypeRepository(_context);
        public ILinkRegistrationGroupFeeRepository LinkRegistrationGroupFees => _linkRegistrationGroupFeeRepository = _linkRegistrationGroupFeeRepository ?? new LinkRegistrationGroupFeeRepository(_context);
        public ILinkEventGroupRepository LinkEventGroups => _linkEventGroupRepository = _linkEventGroupRepository ?? new LinkEventGroupRepository(_context);
        public ISessionRepository Sessions => _sessionRepository = _sessionRepository ?? new SessionRepository(_context);
        public ISessionLeaderLinkRepository SessionLeaderLinks => _sessionLeaderLinkRepository = _sessionLeaderLinkRepository ?? new SessionLeaderLinkRepository(_context);
        public ISessionRegistrationGroupPricingRepository SessionRegistrationGroupPricings => _sessionRegistrationGroupPricingRepository = _sessionRegistrationGroupPricingRepository ?? new SessionRegistrationGroupPricingRepository(_context);
        public ICountryRepository CountryRepository => _countryRepository = _countryRepository ?? new CountryRepository(_context);
        public IStateRepository StateRepository => _stateRepository = _stateRepository ?? new StateRepository(_context);
        public IEventContactRepository EventContacts => _eventContactRepository = _eventContactRepository ?? new EventContactRepository(_context);
        public ISolrExportRepository SolrExports => _solrExportRepository = _solrExportRepository ?? new SolrExportRepository(_context);
        public IContactRoleRepository ContactRoles => _contactRoleRepository = _contactRoleRepository ?? new ContactRoleRepository(_context);
        public IEntityRoleRepository EntityRoles => _entityRoleRepository = _entityRoleRepository ?? new EntityRoleRepository(_context);
        public IEntityRoleHistoryRepository EntityRoleHistories => _entityRoleHistoryRepository = _entityRoleHistoryRepository ?? new EntityRoleHistoryRepository(_context);
        public IContactActivityRepository ContactActivities => _contactActivityRepository = _contactActivityRepository ?? new ContactActivityRepository(_context);
        public IEventRegisterRepository EventRegister => _eventRegisterRepository = _eventRegisterRepository ?? new EventRegisterRepository(_context);
        public IEventRegisterSessionRepository EventRegisterSession => _eventRegisterSessionRepository = _eventRegisterSessionRepository ?? new EventRegisterSessionRepository(_context);
        public IEventRegisterQuestionRepository EventRegisterQuestion => _eventRegisterQuestionRepository = _eventRegisterQuestionRepository ?? new EventRegisterQuestionRepository(_context);
        public ICustomFieldRepository CustomFields => _customFieldRepository = _customFieldRepository ?? new CustomFieldRepository(_context);
        public IContactTokenRepository ContactTokens => _contactTokenRepository = _contactTokenRepository ?? new ContactTokenRepository(_context);
        public IContactActivityInteractionRepository ContactActivityInteractions => _contactActivityInteractionRepository = _contactActivityInteractionRepository ?? new ContactActivityInteractionRepository(_context);
        public IOpportunityPipelineRepository OpportunityPipelines => _opportunityPipelineRepository = _opportunityPipelineRepository ?? new OpportunityPipelineRepository(_context);
        public IPipelineStageRepository PipelineStages => _pipelineStageRepository = _pipelineStageRepository ?? new PipelineStageRepository(_context);
        public IPipelineProductRepository PipelineProducts => _pipelineProductRepository = _pipelineProductRepository ?? new PipelineProductRepository(_context);
        public IBillingCycleNotificationRepository BillingCycleNotifications => _billingCycleNotificationRepository = _billingCycleNotificationRepository ?? new BillingCycleNotificationRepository(_context);
        public IOpportunityRepository Opportunities => _opportunityRepository = _opportunityRepository ?? new OpportunityRepository(_context);
        public async Task<int> CommitAsync()
        {
          return await _context.SaveChangesAsync();
        }

        public void Dispose()
        {
          _context.Dispose();
        }
  }
}