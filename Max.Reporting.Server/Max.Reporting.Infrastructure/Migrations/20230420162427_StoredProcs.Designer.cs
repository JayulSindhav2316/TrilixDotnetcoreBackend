// <auto-generated />
using System;
using Max.Reporting.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Max.Reporting.Infrastructure.Migrations
{
    [DbContext(typeof(ReportContext))]
    [Migration("20230420162427_StoredProcs")]
    partial class StoredProcs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrApplock", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("tr_applock", (string)null);
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_tr_category_Name")
                        .IsUnique();

                    b.ToTable("tr_category", (string)null);
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("definition");

                    b.Property<int>("ReportId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ReportId" }, "ReportId");

                    b.ToTable("tr_definition", (string)null);
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrObject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Value")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("Id");

                    b.ToTable("tr_object", (string)null);
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<ulong?>("Bookmark")
                        .HasColumnType("bit(1)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryId" }, "IX_tr_report_CategoryId");

                    b.HasIndex(new[] { "Name" }, "IX_tr_report_Name")
                        .IsUnique();

                    b.HasIndex(new[] { "TemplateId" }, "IX_tr_report_TemplateId");

                    b.ToTable("tr_report", (string)null);
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrSet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Member")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id", "Member")
                        .HasName("PRIMARY");

                    b.ToTable("tr_set", (string)null);
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrString", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("tr_string", (string)null);
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("definition");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tr_template", (string)null);
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrDefinition", b =>
                {
                    b.HasOne("Max.Reporting.Domain.Entities.TrReport", "Report")
                        .WithMany("TrDefinitions")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tr_definition_ibfk_1");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrReport", b =>
                {
                    b.HasOne("Max.Reporting.Domain.Entities.TrCategory", "Category")
                        .WithMany("TrReports")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Max.Reporting.Domain.Entities.TrTemplate", "Template")
                        .WithMany("TrReports")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tr_templateid_ibfk_1");

                    b.Navigation("Category");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrCategory", b =>
                {
                    b.Navigation("TrReports");
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrReport", b =>
                {
                    b.Navigation("TrDefinitions");
                });

            modelBuilder.Entity("Max.Reporting.Domain.Entities.TrTemplate", b =>
                {
                    b.Navigation("TrReports");
                });
#pragma warning restore 612, 618
        }
    }
}
